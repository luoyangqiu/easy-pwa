/* minified */
const e="easy-pwa:2019-12-14|16:05:04",n=["./style.css","app.a5d34gk6j24fd8fg3.js","/img/emoji1.gif","/img/emoji2.gif","/img/emoji3.gif","/img/emoji4.gif","index.html"];self.addEventListener("install",t=>{console.info("installing........."),t.waitUntil(caches.open(e).then(e=>{n.forEach((t,r)=>{e.add(t).then(()=>{r==n.length-1&&(console.info("files installed"),self.skipWaiting())}).catch(e=>{console.error(e)})})}))}),self.addEventListener("error",e=>{console.error("error==>",e)}),self.addEventListener("unhandledrejection",e=>{console.error("unhandledrejection==>",e)}),self.addEventListener("activate",n=>{console.info("service worker "+e+" is running!"),n.waitUntil(void caches.keys().then(n=>Promise.all(n.filter(n=>n!=e).map(e=>caches.delete(e)))).catch(e=>{console.error(e)}))}),self.addEventListener("fetch",n=>{"GET"===n.request.method&&n.respondWith(caches.match(n.request).then(t=>{if(t)return t;let r=n.request.clone();return fetch(r).then(t=>{if(!t||200!=t.status||"basic"!=t.type)return t;const s=t.clone();return r.url.replace(r.referrer,"/"),caches.open(e).then(e=>{e.put(n.request,s)}),t})}))});